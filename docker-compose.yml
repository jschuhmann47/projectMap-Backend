version: '2.2'

volumes:
  mongodata1:
  mongodata2:
  mongodata3:

services:
  mongo:
    image: mongo:4.4.7
    restart: on-failure
    depends_on:
      - mongo2
      - mongo3
    container_name: mongo
    hostname: mongo
    volumes:
      - mongodata1:/data/db
    ports:
      - '27016:27016'

    entrypoint:
      [
        '/usr/bin/mongod',
        '--replSet',
        'my-replica-set',
        '--bind_ip_all',
        '--port',
        '27016',
      ]
    healthcheck:
      test: test $$(echo "rs.initiate({_id:'my-replica-set',members:[{_id:0,host:\"mongo:27016\",priority:4},{_id:1,host:\"mongo2:27018\",priority:3},{_id:2,host:\"mongo3:27019\",priority:3}]}).ok || rs.status().ok" | mongo --port 27016 --quiet) -eq 1
      start_period: 30s

  mongo2:
    image: mongo:4.4.7
    restart: always
    hostname: mongo2
    container_name: mongo2
    volumes:
      - mongodata2:/data/db
    ports:
      - '27018:27018'

    entrypoint:
      [
        '/usr/bin/mongod',
        '--replSet',
        'my-replica-set',
        '--bind_ip_all',
        '--port',
        '27018',
      ]

  mongo3:
    image: mongo:4.4.7
    restart: always
    container_name: mongo3
    hostname: mongo3
    volumes:
      - mongodata3:/data/db
    ports:
      - '27019:27019'

    entrypoint:
      [
        '/usr/bin/mongod',
        '--replSet',
        'my-replica-set',
        '--bind_ip_all',
        '--port',
        '27019',
      ]

  seed-data:
    image: custom-mongo-seeding:local
    build:
      context: .
      dockerfile: ./sample-data/Dockerfile
    depends_on:
      - mongo
    environment:
      DB_HOST: ${MONGO_SEED_DB_HOST}
      DB_PORT: ${MONGO_SEED_DB_PORT}
      DB_NAME: project
